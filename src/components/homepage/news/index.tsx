import React from 'react'

import { useStaticQuery, graphql } from 'gatsby'
import { parseISO } from 'date-fns'

import Card from './Card'

import './news.scss'

import { LatestNewsQuery } from 'autogenerated/graphql-types'

const query = graphql`
	query LatestNews {
		allWpPost(limit: 6, sort: { order: DESC, fields: date }) {
			edges {
				node {
					title
					excerpt
					slug
					date
					post_preview {
						excerpt
						previewImage {
							sourceUrl
							altText
						}
					}
				}
			}
		}
	}
`

const getMobileNewsCardStyle = (index: number) =>
	index > 0 ? 'is-half-mobile' : 'is-full-mobile'

const getMobileNewsCardExcerptStyle = (index: number) =>
	index > 0 ? 'is-hidden-mobile' : ''

export type Props = {}

export const News: React.FC<Props> = ({}) => {
	const data = useStaticQuery<LatestNewsQuery>(query)
	const { edges } = data.allWpPost

	return (
		<div className="news-body">
			<div className="container">
				<div className="columns is-multiline is-mobile">
					{edges.map(({ node }, i) => (
						<div
							className={`column is-one-third-desktop ${getMobileNewsCardStyle(
								i
							)}`}
							key={i}
						>
							<Card
								title={node.title ?? ''}
								excerpt={node.post_preview?.excerpt ?? ''}
								image={{
									url: node.post_preview?.previewImage?.sourceUrl ?? '',
									alt: node.post_preview?.previewImage?.altText ?? ''
								}}
								path={node.slug ?? ''}
								date={parseISO(node.date) ?? new Date()}
								excerptClassName={getMobileNewsCardExcerptStyle(i)}
							/>
						</div>
					))}
				</div>
			</div>
		</div>
	)
}

export default News
