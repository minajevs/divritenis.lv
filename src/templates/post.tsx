import React from 'react'
import Helmet from 'react-helmet'
import { graphql } from 'gatsby'
import Layout from 'src/components/layout'
import { BreadcrumbsFactory } from 'src/components/layout/breadcrumbs'

import { BlogPostByIdQuery } from 'autogenerated/graphql-types'
import PostInfo from 'src/components/post/PostInfo'
import { parseJSON } from 'date-fns'
import RecommendedPosts from 'src/components/post/recommended-posts/RecommendedPosts'

type TemplateProps = {
  data: BlogPostByIdQuery
}

export const BlogPostTemplate: React.FC<TemplateProps> = ({ data }) => {
  const { wpNews: post } = data

  if (!post || !post.content || !post.title) return <>Error loading Post :( </>

  const { title, content, date, tags } = post
  return (
    <div className="container content">
      <div className="columns">
        <div className="column is-three-quarters">
          <h1 className="is-size-2 has-text-weight-bold is-bold-light">
            {title}
          </h1>
          <div dangerouslySetInnerHTML={{ __html: content }} />
        </div>
        <div className="column">
          <PostInfo date={parseJSON(date)} tags={tags?.nodes} />
          <RecommendedPosts />
        </div>
      </div>
    </div>
  )
}

type Props = {
  data: BlogPostByIdQuery
}

const BlogPost: React.FC<Props> = ({ data }) => {
  const { wpNews: post } = data

  return (
    <Layout
      breadcrumbs={['zinas', BreadcrumbsFactory.currentPage(post?.title || '')]}
    >
      <Helmet title={`${post?.title} | Blog`} />
      <BlogPostTemplate data={data} />
    </Layout>
  )
}

export default BlogPost

export const pageQuery = graphql`
  query BlogPostByID($id: String!) {
    wpNews(id: { eq: $id }) {
      id
      title
      slug
      content
      date
      tags {
        nodes {
          name
          slug
        }
      }
    }
  }
`
