import React from 'react'
import Helmet from 'react-helmet'
import { graphql } from 'gatsby'
import Layout from 'src/components/layout'
import PostList from 'src/components/post-list'

import { TagPageQuery } from 'autogenerated/graphql-types'

type Props = {
  data: TagPageQuery
  pageContext: {
    currentPage: number
    numPages: number
    name: string
  }
}

const Tag: React.FC<Props> = props => {
  const { data, pageContext } = props
  const { edges: posts, totalCount } = data.allWpNews
  const { name: tag } = pageContext

  return (
    <Layout
      breadcrumbs={[
        { title: 'Birkas', path: null },
        { title: tag, path: `/tags/${tag}` }
      ]}
    >
      <Helmet title={`${tag}`} />
      <PostList posts={posts.map(x => x.node) ?? []} />
    </Layout>
  )
}

export default Tag

export const pageQuery = graphql`
  query TagPage($slug: String!) {
    allWpNews(
      filter: { tags: { nodes: { elemMatch: { slug: { eq: $slug } } } } }
    ) {
      totalCount
      edges {
        node {
          ...PostListFields
        }
      }
    }
  }
`
