import React from 'react'
import Helmet from 'react-helmet'
import { graphql } from 'gatsby'
import Layout from 'src/components/layout'
import PostList from 'src/components/PostList'

import { TagPageQuery } from 'autogenerated/graphql-types'

type Props = {
	data: TagPageQuery
	pageContext: {
		currentPage: number
		numPages: number
		name: string
	}
}

const Tag: React.FC<Props> = props => {
	const { data, pageContext } = props
	const { edges: posts, totalCount } = data.allWpPost
	const { name: tag } = pageContext
	const title = `${totalCount} post${
		totalCount === 1 ? '' : 's'
	} with the tag ${tag}`

	return (
		<Layout>
			<Helmet title={`${tag}`} />
			<PostList posts={posts.map(x => x.node) ?? []} title={title} />
		</Layout>
	)
}

export default Tag

export const pageQuery = graphql`
	query TagPage($slug: String!) {
		allWpPost(
			filter: { tags: { nodes: { elemMatch: { slug: { eq: $slug } } } } }
		) {
			totalCount
			edges {
				node {
					...PostListFields
				}
			}
		}
	}
`
